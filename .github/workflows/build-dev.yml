name: build-immutablecore-dev

on:
  workflow_dispatch:

jobs:
  build-dev-image:
    name: Build DEV Image
    runs-on: ubuntu-latest
    environment: dev
    env:
      IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
      IMAGE_NAME: ${{ vars.IMAGE_NAME || 'imc-dev' }}
      PRO_IMAGE_NAME: ${{ vars.PRO_IMAGE_NAME || 'imc-pro-dev' }}
      SOURCE_REGISTRY: ${{ vars.SOURCE_REGISTRY || 'quay.io' }}
      SOURCE_IMAGE: ${{ vars.SOURCE_IMAGE || 'silverblue' }}
      SOURCE_ORG: ${{ vars.SOURCE_ORG || 'fedora-ostree-desktops' }}
      IMAGE_VERSION: ${{ vars.IMAGE_VERSION || '41' }}

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository content
        uses: actions/checkout@v4

      - name: Generate Tags
        id: generate-tags
        shell: bash
        run: |
          # Generate a timestamp for creating an image version history
          TIMESTAMP="$(date +%Y%m%d)"

          build_tags=()

          build_tags+=("${TIMESTAMP}")
          build_tags+=("${IMAGE_VERSION}")
          build_tags+=("latest")

          echo "Generated tags: "
          for TAG in "${build_tags[@]}"; do
              echo "${TAG}"
          done

          echo "build_tags=${build_tags[*]}" >> $GITHUB_OUTPUT

      - name: Build Base Image
        id: build-base-image
        uses: redhat-actions/buildah-build@v2
        with:
          oci: true
          containerfiles: |
            ./Containerfile
          image: ${{ env.IMAGE_NAME }}
          layers: true
          extra-args: |
            --target=imc
          tags: |
            ${{ steps.generate-tags.outputs.build_tags }}
          build-args: |
            SOURCE_REGISTRY=${{ env.SOURCE_REGISTRY }}
            SOURCE_IMAGE=${{ env.SOURCE_IMAGE }}
            SOURCE_ORG=${{ env.SOURCE_ORG }}
            IMAGE_VERSION=${{ env.IMAGE_VERSION }}

      - name: Build Pro Image
        id: build-pro-image
        uses: redhat-actions/buildah-build@v2
        with:
          oci: true
          containerfiles: |
            ./Containerfile
          image: ${{ env.PRO_IMAGE_NAME }}
          layers: true
          extra-args: |
            --target=imc-pro
          tags: |
            ${{ steps.generate-tags.outputs.build_tags }}
          build-args: |
            SOURCE_REGISTRY=${{ env.SOURCE_REGISTRY }}
            SOURCE_IMAGE=${{ env.SOURCE_IMAGE }}
            SOURCE_ORG=${{ env.SOURCE_ORG }}
            IMAGE_VERSION=${{ env.IMAGE_VERSION }}

      - name: Push Base Image to GHCR
        id: base-image-push
        uses: redhat-actions/push-to-registry@v2
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          image: ${{ steps.build-base-image.outputs.image }}
          tags: ${{ steps.build-base-image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          extra-args: |
            --disable-content-trust

      - name: Push Pro Image to GHCR
        id: pro-image-push
        uses: redhat-actions/push-to-registry@v2
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          image: ${{ steps.build-pro-image.outputs.image }}
          tags: ${{ steps.build-pro-image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          extra-args: |
            --disable-content-trust

      - name: Delete Base Image Versions
        uses: actions/delete-package-versions@v5.0.0
        with:
          package-name: ${{ env.IMAGE_NAME }}
          package-type: container
          min-versions-to-keep: 1

      - name: Delete Pro Image Versions
        uses: actions/delete-package-versions@v5.0.0
        with:
          package-name: ${{ env.PRO_IMAGE_NAME }}
          package-type: container
          min-versions-to-keep: 1
